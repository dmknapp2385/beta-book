{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./climb-data.service\";\nexport class SingleClimbService {\n  constructor(route, location, climbService) {\n    this.route = route;\n    this.location = location;\n    this.climbService = climbService;\n  }\n  getClimb() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.climbService.getClimb(id).subscribe(climb => this.climb = climb);\n  }\n  save() {}\n  goBack() {\n    this.location.back();\n  }\n}\nSingleClimbService.ɵfac = function SingleClimbService_Factory(t) {\n  return new (t || SingleClimbService)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i2.Location), i0.ɵɵinject(i3.ClimbDataService));\n};\nSingleClimbService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SingleClimbService,\n  factory: SingleClimbService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,kBAAkB;EAG7BC,YACUC,KAAqB,EACrBC,QAAkB,EAClBC,YAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,aAAQ,GAARC,QAAQ;IACR,iBAAY,GAAZC,YAAY;EACnB;EAEHC,QAAQ;IACN,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,CAACN,YAAY,CAACC,QAAQ,CAACC,EAAE,CAAC,CAACK,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACA,KAAK,GAAGA,KAAM,CAAC;EAC3E;EAEAC,IAAI,IAAU;EAEdC,MAAM;IACJ,IAAI,CAACX,QAAQ,CAACY,IAAI,EAAE;EACtB;;AAlBWf,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAgB,SAAlBhB,kBAAkB;EAAAiB,YAFjB;AAAM","names":["SingleClimbService","constructor","route","location","climbService","getClimb","id","Number","snapshot","paramMap","get","subscribe","climb","save","goBack","back","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dmkna\\Desktop\\angluar\\beta-book\\src\\app\\single-climb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ClimbDataService } from './climb-data.service';\nimport { Climb } from './climb';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SingleClimbService {\n  climb?: Climb;\n\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private climbService: ClimbDataService\n  ) {}\n\n  getClimb(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.climbService.getClimb(id).subscribe((climb) => (this.climb = climb));\n  }\n\n  save(): void {}\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}