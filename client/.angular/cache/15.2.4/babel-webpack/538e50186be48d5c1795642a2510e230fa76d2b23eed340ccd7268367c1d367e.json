{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InMemoryDataService {\n  createDb() {\n    const climbs = [{\n      id: 1,\n      name: 'Rage',\n      grade: '13-',\n      beta: 'Someting here aobut beta',\n      date: new Date(2021, 1, 22),\n      location: 'BeaverWall, Az'\n    }, {\n      id: 2,\n      name: 'FlyBoy',\n      grade: '12c',\n      beta: 'Someting here aobut beta',\n      date: new Date(2023, 3, 28),\n      location: 'New Wave, Az'\n    }, {\n      id: 3,\n      name: 'Red Tide',\n      grade: '13-',\n      beta: 'Someting here aobut beta',\n      date: new Date(2021, 5, 10),\n      location: 'Reef of Rocks, Az'\n    }, {\n      id: 4,\n      name: 'Sentenced to Hang',\n      grade: '12-',\n      beta: 'Someting here aobut beta',\n      date: new Date(2021, 7, 22),\n      location: 'Prison Camp, Az'\n    }];\n    return {\n      climbs\n    };\n  }\n  // generate unique id for each climb\n  genId(climbs) {\n    return climbs.length > 0 ? Math.max(...climbs.map(climb => climb.id)) + 1 : 5;\n  }\n}\nInMemoryDataService.ɵfac = function InMemoryDataService_Factory(t) {\n  return new (t || InMemoryDataService)();\n};\nInMemoryDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InMemoryDataService,\n  factory: InMemoryDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAC9BC,QAAQ;IACN,MAAMC,MAAM,GAAG,CACb;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,0BAA0B;MAChCC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;MAC3BC,QAAQ,EAAE;KACX,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,0BAA0B;MAChCC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;MAC3BC,QAAQ,EAAE;KACX,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,0BAA0B;MAChCC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;MAC3BC,QAAQ,EAAE;KACX,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,mBAAmB;MACzBC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,0BAA0B;MAChCC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;MAC3BC,QAAQ,EAAE;KACX,CACF;IACD,OAAO;MAAEP;IAAM,CAAE;EACnB;EAEA;EACAQ,KAAK,CAACR,MAAe;IACnB,OAAOA,MAAM,CAACS,MAAM,GAAG,CAAC,GACpBC,IAAI,CAACC,GAAG,CAAC,GAAGX,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACZ,EAAE,CAAC,CAAC,GAAG,CAAC,GAChD,CAAC;EACP;;AA5CWH,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAgB,SAAnBhB,mBAAmB;EAAAiB,YAFlB;AAAM","names":["InMemoryDataService","createDb","climbs","id","name","grade","beta","date","Date","location","genId","length","Math","max","map","climb","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dmkna\\Desktop\\angluar\\beta-book\\client\\src\\app\\in-memory-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Climb } from './climb';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const climbs = [\n      {\n        id: 1,\n        name: 'Rage',\n        grade: '13-',\n        beta: 'Someting here aobut beta',\n        date: new Date(2021, 1, 22),\n        location: 'BeaverWall, Az',\n      },\n      {\n        id: 2,\n        name: 'FlyBoy',\n        grade: '12c',\n        beta: 'Someting here aobut beta',\n        date: new Date(2023, 3, 28),\n        location: 'New Wave, Az',\n      },\n      {\n        id: 3,\n        name: 'Red Tide',\n        grade: '13-',\n        beta: 'Someting here aobut beta',\n        date: new Date(2021, 5, 10),\n        location: 'Reef of Rocks, Az',\n      },\n      {\n        id: 4,\n        name: 'Sentenced to Hang',\n        grade: '12-',\n        beta: 'Someting here aobut beta',\n        date: new Date(2021, 7, 22),\n        location: 'Prison Camp, Az',\n      },\n    ];\n    return { climbs };\n  }\n\n  // generate unique id for each climb\n  genId(climbs: Climb[]): number {\n    return climbs.length > 0\n      ? Math.max(...climbs.map((climb) => climb.id)) + 1\n      : 5;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}